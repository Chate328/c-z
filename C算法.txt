#include<stdio.h>
#define N 40
//输入成绩到数组score[]
void ReadScore(int score[],int n)
{
    printf("Please enter data\n");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&score[i]);
    }
}
//求成绩的平均值
int Average(int score[],int n)
{
    int sum=0;
    for(int i=0;i<n;i++)
    {
       sum+=score[i] ;
    }
    return n!=0? sum/n:-1;
}
//求最高分
int FindMax(int score[],int n)
{
    int Max=score[0];
    for(int i=1;i<n;i++)
    {
        if(Max<score[i])
        {
            Max=score[i];
        }
    }
    return Max;
}
//将成绩从低到高排序
void DataSort(int score[],int n)
{
    int temp;
    for(int j=0;j<n-1;j++)
    {
        for(int i=0;i<n-j-1;i++)
        {
            if(score[i]>score[i+1])
            {
                temp=score[i];
                score[i]=score[i+1];
                score[i+1]=temp;
            }
        }
    }
}//打印从小到大排好序的成绩
void PrintScore(int score[],int n)
{
    printf("排列后\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",score[i]);
    }
    printf("\n");
}
//标记法排序
void DataSort2(int score[] ,int n)
{
    int temp2,k;
    for(int i=0;i<n-1;i++)
    {
        k=i;
        for(int j=i+1;j<n;j++)
        {
          if(score[k]<score[j])
          {
              k=j;
          }
        }
        if(k!=i)
        {
          temp2=score[k];
          score[k]=score[i];
          score[i]=temp2;
        }
    }

}
//折半查找法
int BinSearch(int score[],int key,int n)
{
    int mid,low,high;
    low=0;
    high=n-1;
    while(low<=high)
    {
        mid=low+(high-low)/2;
        if(key<score[mid])
        {
            high=mid-1;
        }
        else if(key>score[mid])
        {
            low=mid+1;
        }
        else
            return mid;
    }
    return -1;
}
int main()
{
   int n,aver,max,key,find;
   int score[N];
   do
   {
       printf("Input an data\n");
       scanf("%d",&n);
   }while(n<0||n>40);
   ReadScore(score,n);
   DataSort2(score,n);
   PrintScore(score,n);
   printf("输入你要查找的成绩");
   scanf("%d",&find);
   find=BinSearch(score,key,n);
   if(find=-1)
   {
       printf("查找失败:\n");
   }
   else
   {
       printf("查找成功\n");
   }
   DataSort(score,n);
   PrintScore(score,n);
   max=FindMax(score,n);
   aver=Average(score,n);
   if(-1==aver)
   {
       printf("Eorr\n");
   }
   else
   {
       printf("average=%d\n",aver);
   }
   printf("Max=%d\n",max);
   return 0;

}
